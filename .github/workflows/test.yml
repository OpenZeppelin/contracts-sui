name: Lint and Test

on:
  push:
    branches: [main, v*]
  pull_request:
    branches: [main, v*]

# Cancel in-progress runs on new pushes to the same PR/branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  SUI_VERSION: "1.58.3"
  COVERAGE_THRESHOLD: 90.0

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.set-matrix.outputs.packages }}
    steps:
      - name: Set package matrix
        id: set-matrix
        run: |
          PACKAGES='["math/core"]'
          echo "packages=$PACKAGES" >> $GITHUB_OUTPUT

      - name: Cache Sui binary
        id: cache-sui
        uses: actions/cache@v4
        with:
          path: ~/.local/bin/sui
          key: sui-${{ runner.os }}-${{ env.SUI_VERSION }}

      - name: Install Sui CLI from binary
        if: steps.cache-sui.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.local/bin
          curl -fLJ https://github.com/MystenLabs/sui/releases/download/mainnet-v${{ env.SUI_VERSION }}/sui-mainnet-v${{ env.SUI_VERSION }}-ubuntu-x86_64.tgz -o sui.tgz
          tar -xzf sui.tgz
          chmod +x sui
          mv sui ~/.local/bin/

      - name: Verify Sui installation
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          sui --version

  lint:
    name: Lint ${{ matrix.package }}
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.setup.outputs.packages) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore Sui CLI
        uses: ./.github/actions/restore-sui
        with:
          version: ${{ env.SUI_VERSION }}

      - name: Lint
        run: sui move build --lint --warnings-are-errors
        working-directory: ./${{ matrix.package }}

      - name: Lint tests
        run: sui move build --test --lint --warnings-are-errors
        working-directory: ./${{ matrix.package }}

  test:
    name: Test ${{ matrix.package }}
    needs: [setup, lint]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.setup.outputs.packages) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore Sui CLI
        uses: ./.github/actions/restore-sui
        with:
          version: ${{ env.SUI_VERSION }}

      - name: Run tests
        run: sui move test --coverage
        working-directory: ./${{ matrix.package }}

      - name: Enforce coverage threshold
        run: |
          sui move coverage summary --summarize-functions > coverage-report.txt
          cat coverage-report.txt

          # Extract overall Move coverage percentage
          coverage=$(grep "% Move Coverage:" coverage-report.txt | awk '{print $(NF-1)}')

          if [ -z "$coverage" ]; then
            echo "Error: Could not extract coverage percentage"
            exit 1
          fi

          echo "Code coverage: $coverage%"
          echo "COVERAGE=$coverage" >> $GITHUB_ENV

          # Check threshold using awk (more portable than bc)
          if awk "BEGIN {exit !($coverage < $COVERAGE_THRESHOLD)}"; then
            echo "❌ Error: Code coverage ($coverage%) is below required threshold of $COVERAGE_THRESHOLD%"
            exit 1
          fi

          echo "✅ Coverage threshold met: $coverage% >= $COVERAGE_THRESHOLD%"
        working-directory: ./${{ matrix.package }}

      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const package = '${{ matrix.package }}';
            const coverage = '${{ env.COVERAGE }}';
            const threshold = '${{ env.COVERAGE_THRESHOLD }}';
            const passed = parseFloat(coverage) >= parseFloat(threshold);
            const emoji = passed ? '✅' : '❌';

            const body = `## ${emoji} Coverage Report: \`${package}\`

            - **Coverage:** ${coverage}%
            - **Threshold:** ${threshold}%
            - **Status:** ${passed ? 'PASSED' : 'FAILED'}

            <details>
            <summary>View full report</summary>

            Check the CI logs for detailed per-module coverage breakdown.
            </details>`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
